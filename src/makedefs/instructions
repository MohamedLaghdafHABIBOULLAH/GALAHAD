#  standard GALAHAD compilation and run instructions

#  Nick Gould, for GALAHAD production
#  This version: 2021-04-29

#  compilation agenda for package

S$(PACKAGE) = $(DEPENDENCIES) $(LGS)($(package).o)
D$(PACKAGE) = $(DEPENDENCIES) $(LGD)($(package).o)

#  additional run agenda

SRUN$(PACKAGE) = $(TESTDEPS) $(LGS)(use$(package).o) $(OBJS)/run$(package)_sif.o
DRUN$(PACKAGE) = $(TESTDEPS) $(LGD)(use$(package).o) $(OBJD)/run$(package)_sif.o
SQPLIB$(PACKAGE) = $(TESTDEPS) $(OBJS)/in$(package).o
DQPLIB$(PACKAGE) = $(TESTDEPS) $(OBJD)/in$(package).o

#  libraries used when linking for tests

LIBS = -lgalahad $(HSL) $(SPRAL) $(MKL_PARDISO) $(PARDISO) $(WSMP) $(METIS) \
                 $(LAPACK) $(BLAS)
PLIBS = $(LIBS) -lgalahad_problem

#  compilation and run agenda

$(PACKAGE)OBJECTSS = $(S$(PACKAGE))
$(PACKAGE)OBJECTSD = $(D$(PACKAGE))
$(PACKAGE)OBJECTSS_CUTEST = $(S$(PACKAGE)) $(SRUN$(PACKAGE))
$(PACKAGE)OBJECTSD_CUTEST = $(D$(PACKAGE)) $(DRUN$(PACKAGE))
$(PACKAGE)OBJECTSS_QPLIB = $(S$(PACKAGE)) $(SQPLIB$(PACKAGE))
$(PACKAGE)OBJECTSD_QPLIB = $(D$(PACKAGE)) $(DQPLIB$(PACKAGE))

OBJECTSS_CUTEST = $($(PACKAGE)OBJECTSS_CUTEST)
OBJECTSD_CUTEST = $($(PACKAGE)OBJECTSD_CUTEST)

#  test agenda

$(PACKAGE)DS = $(D$(PACKAGE)) $(OBJD)/$(package)s.o
$(PACKAGE)DS2 = $(D$(PACKAGE)) $(OBJD)/$(package)s2.o
$(PACKAGE)DS3 = $(D$(PACKAGE)) $(OBJD)/$(package)s3.o
$(PACKAGE)DT = $(D$(PACKAGE)) $(OBJD)/$(package)t.o
$(PACKAGE)SS = $(S$(PACKAGE)) $(OBJS)/$(package)s.o
$(PACKAGE)SS2 = $(S$(PACKAGE)) $(OBJS)/$(package)s2.o
$(PACKAGE)SS3 = $(S$(PACKAGE)) $(OBJS)/$(package)s3.o
$(PACKAGE)ST = $(S$(PACKAGE)) $(OBJS)/$(package)t.o

R$(PACKAGE)DS = $(OBJD)/$(package)s.o -L$(OBJD) $(LIBS)
R$(PACKAGE)DS2 = $(OBJD)/$(package)s2.o -L$(OBJD) $(LIBS)
R$(PACKAGE)DS3 = $(OBJD)/$(package)s3.o -L$(OBJD) $(LIBS)
R$(PACKAGE)DT = $(OBJD)/$(package)t.o -L$(OBJD) $(LIBS)
R$(PACKAGE)SS = $(OBJS)/$(package)s.o -L$(OBJS) $(LIBS)
R$(PACKAGE)SS2 = $(OBJS)/$(package)s2.o -L$(OBJS) $(LIBS)
R$(PACKAGE)SS3 = $(OBJS)/$(package)s3.o -L$(OBJS) $(LIBS)
R$(PACKAGE)ST = $(OBJS)/$(package)t.o -L$(OBJS) $(LIBS)

#  =========================================================================
#  ========================== makefile stanza ==============================
#  =========================================================================

#  main compilations and runs

all: $(package)
all_$(package): all
test: test_$(package)
test_full: test_$(package)_full

#  process package

$(package): $(package)_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: $(PACKAGE) ($(PRECIS) $(SUCC)"
$(package)_single: $($(PACKAGE)OBJECTSS)
	$(RANLIB) $(LGS)
$(package)_double: $($(PACKAGE)OBJECTSD)
	$(RANLIB) $(LGD)

#  process package silently

$(package)_silent: $(package)_silent_$(PRECIS)
$(package)_silent_single: $($(PACKAGE)OBJECTSS)
$(package)_silent_double: $($(PACKAGE)OBJECTSD)

# process package for CUTEst

$(package)_cutest: $(package)_cutest_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: $(PACKAGE) ($(PRECIS) $(SUCC_CUTEST)"
$(package)_cutest_single: $($(PACKAGE)OBJECTSS_CUTEST)
	$(RANLIB) $(LGS)
$(package)_cutest_double: $($(PACKAGE)OBJECTSD_CUTEST)
	$(RANLIB) $(LGD)

#  process package for CUTEst silently

$(package)_cutest_silent: $(package)_cutest_silent_$(PRECIS)
$(package)_cutest_silent_single: $($(PACKAGE)OBJECTSS_CUTEST)
$(package)_cutest_silent_double: $($(PACKAGE)OBJECTSD_CUTEST)

#  process package add-ons for CUTEst

$(package)_cutest_addon: $(package)_cutest_addon_$(PRECIS)
$(package)_cutest_addon_single: $(LGS)(use$(package).o) \
                                $(OBJS)/run$(package)_sif.o
$(package)_cutest_addon_double: $(LGD)(use$(package).o) \
                                $(OBJD)/run$(package)_sif.o

#  process package for QPLIB

$(package)_qplib: $(package)_qplib_$(PRECIS)
	@printf ' %-21s\n' "GALAHAD: $(PACKAGE) ($(PRECIS) $(SUCC_QPLIB)"
$(package)_qplib_single: $($(PACKAGE)OBJECTSS_QPLIB)
	$(RANLIB) $(LGS)
$(package)_qplib_double: $($(PACKAGE)OBJECTSD_QPLIB)
	$(RANLIB) $(LGD)

#  process package for QPLIB silently

$(package)_qplib_silent: $(package)_qplib_silent_$(PRECIS)
$(package)_qplib_silent_single: $($(PACKAGE)OBJECTSS_QPLIB)
$(package)_qplib_silent_double: $($(PACKAGE)OBJECTSD_QPLIB)

#  process package add-ons for QPLIB

$(package)_qplib_addon: $(package)_qplib_addon_$(PRECIS)
$(package)_qplib_addon_single: $(OBJS)/in$(package).o
$(package)_qplib_addon_double: $(OBJD)/in$(package).o

#  run independent package tests

$(package)srunall: $(package)ss $(package)ss2 $(package)ss3 $(package)st
$(package)drunall: $(package)ds $(package)ds2 $(package)ds3 $(package)dt
$(package)runall: $(package)drunall $(package)srunall

#  run qp data format package

in$(package): in$(package)_$(PRECIS)
in$(package)_single: $($(PACKAGE)OBJECTSS) $(OBJS)/in$(package).o
in$(package)_double: $($(PACKAGE)OBJECTSD) $(OBJD)/in$(package).o

#  test package both fullly and with CUTEst

test_$(package): test_$(package)_$(PRECIS)

test_$(package)_single: $(package)st test_$(package)_cutest_single
	echo ""
	echo " Tests for $(package) complete"

test_$(package)_double: $(package)dt test_$(package)_cutest_double
	echo ""
	echo " Tests for $(package) complete"

#  package example for specification document

test_$(package)_spec: test_$(package)_spec_$(PRECIS)
test_$(package)_spec_single: $(package)ss
test_$(package)_spec_double: $(package)ds

#  full test package without CUTEst

test_$(package)_full: test_$(package)_full_$(PRECIS)
test_$(package)_full_single: $(package)st
test_$(package)_full_double: $(package)dt

#  test package with CUTEst

test_$(package)_cutest: test_$(package)_cutest_$(PRECIS)
test_$(package)_cutest_single: $($(PACKAGE)OBJECTSS_CUTEST)
	echo ""
	echo " Testing CUTEst interface to $(package)"
	cd $(GALAHAD)/examples ; \
          sdgal $(VERSION) $(package) -s $(CUTEST_EXAMPLE)

test_$(package)_cutest_double: $($(PACKAGE)OBJECTSD_CUTEST)
	echo ""
	echo " Testing CUTEst interface to $(package)"
	cd $(GALAHAD)/examples ; \
          sdgal $(VERSION) $(package) $(CUTEST_EXAMPLE)

#  test package with QPLIB

test_$(package)_qplib: test_$(package)_qplib_$(PRECIS)
test_$(package)_qplib_single: $($(PACKAGE)OBJECTSS_QPLIB)
	echo ""
	echo " Testing QPLIB interface to $(package)"
	cd $(GALAHAD)/examples ; \
          dgal $(VERSION) $(package) -s $(QPLIB_EXAMPLE)

test_$(package)_qplib_double: $($(PACKAGE)OBJECTSD_QPLIB)
	echo ""
	echo " Testing QPLIB interface to $(package)"
	cd $(GALAHAD)/examples ; \
          dgal $(VERSION) $(package) $(QPLIB_EXAMPLE)

#  run specification document example tests

$(package)ss: $($(PACKAGE)SS)
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)SS)
	$(RMOOC)
	- ./run_$(package) >& $(package)s.output
	cat $(package)s.output
	rm ./run_$(package)

$(package)ss2: $($(PACKAGE)SS2)
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)SS2)
	$(RMOOC)
	- ./run_$(package) >& $(package)s2.output
	cat $(package)s2.output
	rm ./run_$(package)

$(package)ss3: $($(PACKAGE)SS3)
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)SS3)
	$(RMOOC)
	- ./run_$(package) >& $(package)s3.output
	cat $(package)s3.output
	rm ./run_$(package)

$(package)ds: $($(PACKAGE)DS)
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)DS)
	$(RMOOC)
	- ./run_$(package) >& $(package)ds.output
	cat $(package)ds.output
	rm ./run_$(package)

$(package)ds2: $($(PACKAGE)DS2)
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)DS2)
	$(RMOOC)
	- ./run_$(package) >& $(package)ds2.output
	cat $(package)ds2.output
	rm ./run_$(package)

$(package)ds3: $($(PACKAGE)DS3)
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)DS3)
	$(RMOOC)
	- ./run_$(package) >& $(package)ds3.output
	cat $(package)ds3.output
	rm ./run_$(package)

#  run full (comprehensive) example tests

$(package)st: $($(PACKAGE)ST)
	echo " Exhaustive test of subroutine interface to $(package)"
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)ST)
	$(RMOOC)
	- ./run_$(package) >& $(package)t.output
	cat $(package)t.output
	rm ./run_$(package)

$(package)dt: $($(PACKAGE)DT)
	echo " Exhaustive test of subroutine interface to $(package)"
	$(FORTRAN) $(RUNFFLAGSOMP) $(SPECIAL) -o run_$(package) \
                                                     $(R$(PACKAGE)DT)
	$(RMOOC)
	- ./run_$(package) >& $(package)dt.output
	cat $(package)dt.output
	rm ./run_$(package)

#  main program

run$(package)_sif.o: $(OBJ)/run$(package)_sif.o

$(OBJ)/run$(package)_sif.o: ../$(package)/run$(package)_sif.f90
	@printf ' %-9s %-15s\t\t' "Compiling" "run$(package)_sif"
	$(SED) -f $(SEDS) \
           ../$(package)/run$(package)_sif.f90 > $(OBJ)/run$(package)_sif.f90
	cd $(OBJ); $(FORTRAN) -o run$(package)_sif.o \
                     $(FFLAGSS) run$(package)_sif.f90
	rm $(OBJ)/run$(package)_sif.f90
	@printf '[ OK ]\n'

# main progarms for data-file interface

in$(package).o: $(OBJ)/in$(package).o

$(OBJ)/in$(package).o: ../$(package)/in$(package).f90
	@printf ' %-9s %-15s\t\t' "Compiling" "in$(package)"
	$(SED) -f $(SEDS) ../$(package)/in$(package).f90 \
           > $(OBJ)/in$(package)1.f90
	$(SED) -f $(LSEDS) $(OBJ)/in$(package)1.f90 > $(OBJ)/in$(package).f90
	cd $(OBJ); $(FORTRAN) -o in$(package).o $(FFLAGSOMP) in$(package).f90
	rm $(OBJ)/in$(package).f90 $(OBJ)/in$(package)1.f90
	@printf '[ OK ]\n'

#  book keeping

clean:
	@printf ' %-9s\t\t' "Removing $(package) files"
	$(RMARFILE) $(package).o
	$(RM) $(OBJ)/$(package)t.o $(OBJ)/$(package)s.o
	@printf '[ OK ]\n'

cleanall:
	@printf ' %-14s\t\t' \
          "Removing all $(PRECIS) precision object and module files"
	$(RM) $(OBJ)/* $(MOD)/*
	@printf '[ OK ]\n'
