#!/bin/bash

# script to create relevant shared GALAHAD libraries from static ones

# syntax: create_shared

# using shell variables

#   CC           is the c compiler used, e.g, gcc
#   FORTRAN      is the fortran compiler, e.g., gfortran
#   OPTIMIZATION is the appropriate optimization flag, e.g., -O
#   SHARED       is the appropriate flag to produce a shared (dynamic)
#                library, e.g., -shared
#   DLEXT        is the suffix for shared libraries, e.g. so (Linux), 
#                dylib (OSX), dll (Windows)
#   LOADALL      is the loader option to include every item in the archive, 
#                e.g. --whole-archive (Linux), -all_load (OSX)
#   LOADNONE     is the loader option to not include subsequent items in the
#                archive, e.g., --no-whole-archive (Linux),-noall_load (OSX)

mkdir -p shared

echo " creating shared GALAHAD libraries in"
echo "  $PWD/shared"

for name in galahad_py
do
  if [ -f "lib$name.a" ]; then
    echo " creating lib$name.$DLEXT"
#   $CC $OPTIMIZATION $SHARED -o shared/lib$name.$DLEXT \
#-Wl,--no-undefined \
    $CC $OPTIMIZATION $SHARED -o shared/lib$name.$DLEXT \
-Wl,$LOADALL lib$name.a -Wl,$LOADNONE
  else
    echo " static library lib$name.a does not exist, shared creation skipped"
  fi
done

for name in galahad galahad_hsl galahad_spral \
            galahad_mkl_pardiso galahad_pardiso galahad_wsmp \
            galahad_pastix galahad_mumps galahad_umfpack \
            galahad_metis galahad_lapack galahad_blas \
            galahad_cutest_dummy galahad_hsl_c galahad_c
do
  if [ -f "lib$name.a" ]; then
    echo " creating lib$name.$DLEXT"
#echo "    $FORTRAN $OPTIMIZATION $SHARED -o shared/lib$name.$DLEXT \
#-Wl,$LOADALL lib$name.a -Wl,$LOADNONE"
#    $FORTRAN $OPTIMIZATION $SHARED -o shared/lib$name.$DLEXT \
#-Wl,--no-undefined -Wl,$LOADALL lib$name.a -Wl,$LOADNONE
    $FORTRAN $OPTIMIZATION $SHARED -o shared/lib$name.$DLEXT \
-Wl,$LOADALL lib$name.a -Wl,$LOADNONE
  else
    echo " static library lib$name.a does not exist, shared creation skipped"
  fi
done
